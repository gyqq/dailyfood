<style lang="less">
  page{
    background-color: #f0eff5;
  }
  .confirmOrder{
    height: 100%;
    padding-bottom: 98rpx;
  }
.confirmOrder .confirmOrder-one{
  background-color: #b58151;
  height: 10rpx;
  width: 100%;
}
  .confirmOrder .textColor{
    color:#3f1f22 ;
  }
  .confirmOrder .left{
    float: left;
    display: block;
  }
  .confirmOrder .right{
    float: right;
    display: block;
  }
  /*地址*/
  .confirmOrder .confirmOrder-address{
    /*height: 178rpx;*/
    width: 100%;
    margin-bottom: 10rpx;
    background-color: white;
    padding-bottom:15rpx ;
  }
  .confirmOrder .confirmOrder-address .address-left{
    width: 640rpx;
    font-size: 24rpx;
    margin-left: 36rpx;
    margin-top: 40rpx;
  }
  .confirmOrder .confirmOrder-address .address-left-top{
    margin-bottom: 10rpx;
  }
  .confirmOrder .confirmOrder-address .address-left .address-default,.address-type{
    color: white;
    background-color:#b58151;
    width: 60rpx;
    height: 30rpx;
    line-height: 30rpx;
    text-align: center;
    font-size: 20rpx;
  }
  .confirmOrder .confirmOrder-address .address-left .address-name{
    font-size: 25rpx;
    margin-left:28rpx ;
  }
  .confirmOrder .confirmOrder-address .address-left .address-phone{
    font-size:25rpx ;
    margin-left: 72rpx;
  }
  .confirmOrder .confirmOrder-address .address-left .address-type{
    color: #b58151;
    border: 1rpx solid #b58151;
    background-color:white;
    width: 58rpx;
  }

  .confirmOrder .confirmOrder-address .address-left .address{
    font-size: 25rpx;
    width: 490rpx;
    margin-left:24rpx ;
    /*margin-left: 90rpx;*/
  }
  .confirmOrder .confirmOrder-address .address-rightArrow{
    width: 40rpx;
    height: 40rpx;
    margin-top: 60rpx;
    margin-right: 20rpx;
  }
  /*商品信息*/
  .confirmOrder .confirmOrder-proTitle{
    margin-top: 10rpx;
    height: 88rpx;
    line-height: 88rpx;
    color:#3F2021;
    font-size:24rpx;
    background-color: white;
    margin-bottom: 4rpx;
  }
  .confirmOrder .confirmOrder-proTitle .left{
    margin-left: 30rpx;
  }
  .confirmOrder .confirmOrder-productIfo{
    background-color: white;
  }
  .confirmOrder .confirmOrder-productIfo .pro-item{
    height: 180rpx;
    overflow: hidden;
  }
  .confirmOrder .confirmOrder-productIfo .pro-item .pro-img{
    width: 112rpx;
    height: 120rpx;
    background-color: #eeeeee;
    margin-left:30rpx;
    margin-top: 30rpx;
  }
  .confirmOrder .confirmOrder-productIfo .pro-item .pro-ifo{
    width: 450rpx;
    margin-left:30rpx;
    height: 150rpx;
    margin-top: 30rpx;
    overflow: hidden;
  }
  .confirmOrder .confirmOrder-productIfo .pro-item .pro-ifo .pro-title{
    font-size: 24rpx;
    color: #3F2021;

  }
  .confirmOrder .confirmOrder-productIfo .pro-item .pro-ifo .pro-num{
    font-size: 20rpx;
    color: #3F2021;
  }
  .confirmOrder .confirmOrder-productIfo .pro-item .pro-ifo .pro-groupPrice{
    font-size: 28rpx;
    color: #3F2021;
    margin-left: 10rpx;
  }
  .confirmOrder .confirmOrder-productIfo .pro-item .pro-ifo .pro-originalPrice{
    font-size: 24rpx;
    color: #959595;
    margin-left: 70rpx;
    text-decoration:line-through
  }
  /*发票*/
  .confirmOrder .confirmOrder-invoice{
    margin-top: 10rpx;
    height: 88rpx;
    line-height: 88rpx;
    color:#3F2021;
    font-size:24rpx;
    background-color: white;
    margin-bottom: 4rpx;
  }
  .confirmOrder .confirmOrder-invoice .left{
    margin-left: 30rpx;
  }
  .confirmOrder .confirmOrder-invoice .invoice-type{
    /*margin-right: 5rpx;*/
    font-size: 20rpx;
    color: #B58150;
  }
  .confirmOrder .confirmOrder-invoice .invoice-img{
    width: 40rpx;
    height: 40rpx;
    margin-top: 22rpx;
    margin-right: 20rpx;
  }
  /*备注及其他*/
  .confirmOrder .confirmOrder-ifo{
    height: 304rpx;
    background-color: white;
    width: 100%;
  }
  .confirmOrder .confirmOrder-ifo .confirmOrder-note{
    width: 690rpx;
    height: 76rpx;
    display: block;
    margin: 0 auto;
    border-radius: 5rpx;
    background-color:#f0eff5;
    border: 2rpx solid #999999;
    font-size: 24rpx;
    color: #999999;
    padding-left: 30rpx;
    margin-top: 37rpx;
  }
  .confirmOrder .confirmOrder-ifo .confirmOrder-item{
    width: 720rpx;
    margin: 0 auto;
    font-size: 24rpx;
    color: #3f2021;
    margin-top:18rpx ;
    height: 40rpx;
    line-height: 40rpx;
  }
  .confirmOrder .confirmOrder-ifo .confirmOrder-item:nth-child(4) text:nth-child(2){
    color: #e60012;
    font-size: 36rpx;
  }
  /*提交订单*/
  .confirmOrder-bottom{
    /*959595*/
    position: fixed;
    bottom: 0;
    background-color: white;
    border-top: 1rpx solid #cecdd2;
    width:100%;
    height: 98rpx;
    line-height: 98rpx;
  }
  .confirmOrder-bottom .bottom-price{
    font-size: 24rpx;
    color: #E60012;
    display: block;
    float: left;
    font-weight: bolder;
  }
  .confirmOrder-bottom .bottom-price:nth-child(1){
    margin-left: 310rpx;
  }
  .confirmOrder-bottom .bottom-price:nth-child(2){
    font-size: 36rpx;
    margin-left: 10rpx;
  }
  .confirmOrder-bottom .bottom-submitBtn{
    float: right;
    width: 220rpx;
    height: 97rpx;
    background-color: #3e2020;
    color: white;
    line-height: 97rpx;
    font-size: 24rpx;
    text-align: center;
    font-weight: bolder;
  }
</style>
<template>
  <!--团购订单确认-->
  <view class="confirmOrder">
    <view class="confirmOrder-one"></view>
    <view class="confirmOrder-address" @tap="selectAddress">
      <view class="address-left left">
        <view class="address-left-top">
          <text class="address-default left" wx:if="{{addresses.def_addr=='1'}}">默认</text>
          <text class="address-name textColor left">{{addresses.name}}</text>
          <text class="address-phone textColor left">{{addresses.mobile}}</text>
        </view>
        <view>
          <text class="address-type left" wx:if="{{addresses.location_type=='company'}}">{{addresses.location_name}}</text>
          <text class="address textColor left">{{addresses.area}}   {{addresses.addr}}</text>
        </view>
      </view>
      <image  class="address-rightArrow right" src="../../../../image/icon/icon-rightArrow.png"></image>
    </view>
    <view class="confirmOrder-proTitle">
      <text class="left">进行中1/{{groupIfo.person}}</text>
    </view>
    <view class="confirmOrder-productIfo">
      <view class="pro-item">
        <image src="{{groupIfo.products[0].imageId}}" class="pro-img left"></image>
        <view class="pro-ifo left">
          <text class="pro-title">{{groupIfo.groupon_name}}</text>
          <view class="pro-price">
            <text class="pro-num">{{groupIfo.person}}人拼团价</text>
            <text class="pro-groupPrice">￥{{groupIfo.groupon_price}}</text>
            <text class="pro-originalPrice">￥{{groupIfo.origin_price}}</text>
          </view>
        </view>
      </view>
    </view>
    <view class="confirmOrder-invoice" @tap="jumpInvoice">
      <text class="left">发票</text>
      <image class="right invoice-img" src="../../../../image/icon/icon-rightArrow.png"></image>
      <text class="right invoice-type">{{Invoice.is_tax==2?'开发票':'不开发票'}}</text>
    </view>
    <view class="confirmOrder-ifo">
      <input class="confirmOrder-note" value="{{memo}}" bindinput="memoChange" placeholder="订单备注"/>
      <view class="confirmOrder-item">
        <text class="left">商品合计</text>
        <text class="right">￥{{groupIfo.groupon_price}}</text>
      </view>
      <view class="confirmOrder-item">
        <text class="left">运费(快递)</text>
        <text class="right">￥{{groupIfo.is_free_delivery=='true'?'0':'NAN'}}</text>
      </view>
      <view class="confirmOrder-item">
        <text class="left">应付款(含运费)</text>
        <text class="right copeWith">￥{{groupIfo.groupon_price}}</text>
      </view>
    </view>
  </view>
  <view class="confirmOrder-bottom">
    <text class="bottom-price">应付款</text>
    <text class="bottom-price">￥{{groupIfo.groupon_price}}</text>
    <view class="bottom-submitBtn" @tap="submitOrder">提交订单</view>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import { connect } from 'wepy-redux';

  export default class confirmOrder extends wepy.page {
    config = {
      navigationBarTitleText: '确认订单'
    };
    components = {};

    //mixins = [testMixin];

    data = {
      options:{},
      globalData:wepy.$instance.globalData,
      groupon_id:'',//团购id
      player_order_id:'',//订单id
      grouponIfo:{},//生成订单后返回数据
      addr_id:"",//收货地址id "47597"
      addresses:{},//收货地址信息
      groupIfo:{},//团购信息
      Invoice:{},//发票
      memo:'',//备注
    };

    computed = {};

    methods = {
      submitOrder(){//提交订单
        wepy.showLoading({
          title: '订单生成中',
        })
        console.log('=========')
        console.log(this.options.groupType)
        console.log('=========')
        this.openGroupOrder()//开团


        // wepy.removeStorageSync('invoice')//清除发票信息
        // wepy.removeStorageSync('addr_id')//清除所选地址id
        // wepy.$instance.clearStorageData()
        // wepy.navigateTo({
        //   url: '../../groupBuying/groupState/groupState'
        // })
      },
      memoChange: function (e) {//备注
        this.memo = e.detail.value
        //console.log(this.memo)
      },
      selectAddress(){//跳转到地址页
        //'pages/user/address/address',
        wepy.navigateTo({
          url: '../../../user/address/address?type=select'
        })
      },
      jumpInvoice(){//跳转到发票页
        wepy.navigateTo({
          url: '../../../invoice/invoice'
        })
      }
    };

    events = {};
    getAddress(){//获得收货地址
      var self =this
      var publicStr = wepy.$instance.getPublicData()
      //addr_id
      this.addr_id = wepy.getStorageSync('addr_id') ||''
      let url = self.globalData.base_url+self.globalData.version_no+'/member/addresses'+publicStr+'&addr_id='+this.addr_id
      console.log(self.addr_id)
      wepy.request({
        url:url,
        method: "get",
        header: {
          "Content-Type": "application/json; charset=UTF-8"  //post
        },
        success: function(res) {
          console.log('收货地址信息===')
          console.log(res)
          console.log('收货地址信息===')
          if (self.addr_id) {//选择后的地址
            res.data.results.map((item) =>{
              if (item.addr_id ==self.addr_id) {
                item.area = item.area.split(':')[1]
                if (item.location_type=="company") {//公司
                  item.location_name ='公司'
                }
                if (item.location_type=="home") {//家
                  item.location_name ='家'
                }
                self.addresses = item
              }
            })
          }else {//初始进来的地址
            res.data.results.map((item) =>{
              if (self.addr_id==item.addr_id){//存在选择id
                item.area = item.area.split(':')[1]
                self.addresses = item
                return false
              } else if(item.def_addr=='1'){//默认地址
                item.area = item.area.split(':')[1]
                self.addresses = item
                self.addr_id  = item.addr_id
                return false
              }
            })
          }


         //console.log(self.addr_id)
          self.$apply()
        }
      })
    }
    getGroupProduct(){//获取商品信息  团购信息
      var self =this
      var publicStr = wepy.$instance.getPublicData()
      let url = self.globalData.base_url+self.globalData.version_no+'/group-buy/'+this.groupon_id+publicStr
      console.log('商品信息接口'+url)
      wepy.request({
        url:url,
        method: "get",
        header: {
          "Content-Type": "application/json; charset=UTF-8"  //post
        },
        success: function(res) {
          console.log(res)
          var res = res.data.results[0]
          //console.log(res.groupon_image)
          if (res.products){
            res.products[0].imageId = self.globalData.base_url+self.globalData.version_no+'/img/'+res.products[0].imageId
          }
          self.groupIfo = res
          console.log('团购信息===')
          console.log(self.groupIfo)
          console.log('团购信息===')
          wepy.hideLoading()
          self.$apply()
        },
        fail:function(res) {
          console.log('商品接口错误')
          console.log(res)
        }
      })
    }
    openGroupOrder(){//开团
      var self =this
      var publicStr = wepy.$instance.getPublicData()
      let url = self.globalData.base_url+self.globalData.version_no+'/group-buy/order'+publicStr
      console.log(url)

      // buyType
      // create: 开团
      // join:蹭团
      // invite:接受邀请

      // is_tax，    是否要开发票
      // tax_type，发票类型
      // tax_content，发票内容
      // tax_company，发票抬头
      // tax_no，  发票税号
      // tax_email，发票接收邮箱
      // memo，      订单备注
      var data = {
        _method:'POST',
        groupId:parseInt(this.groupon_id),
        addressId:parseInt(this.addr_id),
        buyType:this.options.groupType,
        payment:wepy.$instance.globalData.platform,//wepy.$instance.globalData.platform  wx_lite
        memo:this.memo,//备注
        is_tax:false//不开发票
      }
      if (this.options.groupType=='join') {//蹭团需要加上此参数
        data.gactivityId = this.options.gactivityId
      }
      console.log(data)
      var invoice = wepy.getStorageSync('invoice')
      if (invoice) {
        var is_tax = false
        if (invoice.is_tax==1) {//1 不开 2公司发票
          is_tax = false
        }else {
          is_tax = true
        }
        data.is_tax = is_tax

        data.tax_company = invoice.tax_company
        data.tax_no = invoice.tax_no
        data.tax_email = invoice.tax_email
      }
      wepy.request({
        url:url,
        method: "post",
        data:data,
        header: {
          "Content-Type": "application/json; charset=UTF-8"  //post
        },
        success: function(res) {
          //订单生成
          console.log('订单生成===========')
          console.log(res)
          var res = res.data
          if (res.status == '1') {//开团成功
            self.grouponIfo = res.results[0]
            self.getPayData(res.results[0])
          } else {
            wepy.showModal({
              title: '订单确认提示',
              content: res.status_txt,
              success: function(res) {

              }
            })
            wepy.hideLoading()
          }
          self.$apply()
        }
      })
    }
    getPayData(backOrder){//获取支付信息
      var self =this
      var publicStr = wepy.$instance.getPublicData()
      var openid = wepy.getStorageSync('openid')
      let url = self.globalData.base_url+self.globalData.version_no+'/small/weixinpay?openid='+openid+'&order_id='+backOrder.player_order_id
      console.log(url)
      wepy.request({
        url:url,
        method: "get",
        header: {
          "Content-Type": "application/json; charset=UTF-8"  //post
        },
        success: function(res) {
          console.log('支付参数返回===========')
          console.log(res.data.results[0])
          wepy.hideLoading()
          self.pay(res.data.results[0])

        }
      })
    }
    pay(payData){
      var self =this
      wepy.requestPayment(
        {
          'timeStamp': payData.timeStamp,
          'nonceStr': payData.nonceStr,
          'package':  payData.package,
          'signType': 'MD5',
          'paySign': payData.paySign,
          'success': function (res) {
             console.log(res)
             console.log('支付正确'+self.player_order_id)
            wepy.redirectTo({
              url: '../../groupState/groupState?groupOn_id='+self.grouponIfo.groupon_id
            })

          },
          'fail': function (res) {
            console.log(res)
            console.log('支付错误'+self.grouponIfo.player_order_id)

            wepy.redirectTo({
              url: '../orderDetail/orderDetail?order_id='+self.grouponIfo.player_order_id
            })

          },
          'complete': function (res) {//上线注释
            console.log('支付All')
            console.log(res)

          }
        })
    }
    setInvoice(){//设置发票信息
      var invoice = wepy.getStorageSync('invoice') ||{}
      this.Invoice = invoice
      this.$apply()
      console.log('发票信息===')
      console.log(this.Invoice)
      console.log('发票信息===')
    }
    onLoad(options) {
      //console.log('onload')
      wepy.showLoading({
        title: '加载中',
      })
      console.log(options)
      this.options = options
      this.groupon_id = options.groupon_id
      this.getGroupProduct()//团购信息
      //console.log(options)

    }
    onShow(){
      //console.log('onshow')
      this.getAddress()//收货地址
      this.setInvoice()//设置发票信息


    }


  }
</script>
